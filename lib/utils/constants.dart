import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:material_symbols_icons/symbols.dart';
import 'package:plane/config/const.dart';
import 'package:plane/config/plane_keys.dart';
import 'package:plane/utils/enums.dart';
// import 'package:google_fonts/google_fonts.dart';

const primaryColor = Color.fromRGBO(63, 118, 255, 1);
const primaryLightColor = Color.fromRGBO(63, 118, 255, 0.1);
const greyColor = Color.fromRGBO(136, 136, 136, 1);
const lightGreeyColor = Color.fromRGBO(238, 238, 238, 1);
const lightYellowColor = Color.fromRGBO(252, 190, 29, 0.16);
const strokeColor = Color(0xFFE5E5E5);
const lightGreyTextColor = Color(0xFFA3A3A3);
const greenWithOpacity = Color.fromRGBO(9, 169, 83, 0.08);
const greenHighLight = Color(0xFF09A953);
const lightGreyBoxColor = Color(0xFFF5F5F5);

// const lightPrimaryTextColor = Colors.black;
// const lightSecondaryTextColor = Color.fromARGB(255, 97, 97, 97);
const lightStrokeColor = Color.fromARGB(255, 158, 158, 158);
const lightBackgroundColor = Colors.white;
const lightSecondaryBackgroundColor = Color(0xFFFAFAFA);
const bottomNavTextColor = Color(0xFF8F8F93);
//Color(0xFFE5E5E5),

// const darkPrimaryTextColor = Colors.white;
// const darkSecondaryTextColor = Color.fromRGBO(142, 148, 146, 1);
const darkStrokeColor = Color.fromARGB(255, 189, 189, 189);
const darkBackgroundColor = Color.fromRGBO(19, 20, 22, 1);
const darkSecondaryBGC = Color.fromRGBO(29, 30, 32, 1);
const darkCircleAvatarColor = Color.fromRGBO(34, 34, 34, 1);
const darkThemeBorder = Color.fromRGBO(39, 42, 45, 1);

const textFieldFilledColor = Color(0xFFF5F5F5);

const lightPrimaryBackgroundDefaultColor =
    Color.fromRGBO(255, 255, 255, 1); // grey 0
const darkPrimaryBackgroundDefaultColor =
    Color.fromRGBO(0, 0, 0, 1); // grey 1000
const lightPrimaryBackgroundHoverColor =
    Color.fromRGBO(245, 245, 245, 1); // grey 20
const darkPrimaryBackgroundHoverColor =
    Color.fromRGBO(23, 23, 23, 1); // grey 900
const lightPrimaryBackgroundSelectedColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const darkPrimaryBackgroundSelectedColor =
    Color.fromRGBO(34, 34, 34, 1); // grey 800
const lightPrimaryBackgroundActiveColor =
    Color.fromRGBO(236, 241, 255, 1); // blue 10
const darkPrimaryBackgroundActiveColor =
    Color.fromRGBO(13, 24, 51, 1); // blue 900
const lightPrimaryBackgroundBrandColor =
    Color.fromRGBO(63, 118, 255, 1); // blue 100
const darkPrimaryBackgroundBrandColor =
    Color.fromRGBO(63, 118, 255, 1); // blue 100
const lightSecondaryBackgroundDefaultColor =
    Color.fromRGBO(250, 250, 250, 1); // grey 10
const darkSecondaryBackgroundDefaultColor =
    Color.fromRGBO(13, 13, 13, 1); // grey 950
const lightSecondaryBackgroundHoverColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const darkSecondaryBackgroundDeHoverColor =
    Color.fromRGBO(23, 23, 23, 1); // grey 900
const lightSecondaryBackgroundSelectedColor =
    Color.fromRGBO(229, 229, 229, 1); // grey 40
const darkSecondaryBackgroundSelectedColor =
    Color.fromRGBO(34, 34, 34, 1); // grey 800
const lightSecondaryBackgroundActiveColor =
    Color.fromRGBO(236, 241, 255, 1); // blue 10
const darkSecondaryBackgroundActiveColor =
    Color.fromRGBO(13, 24, 51, 1); // blue 900
const lightTertiaryBackgroundDefaultColor =
    Color.fromRGBO(245, 245, 245, 1); // grey 20
const darkTertiaryBackgroundDefaultColor =
    Color.fromRGBO(23, 23, 23, 1); // grey 900
const lightTertiaryBackgroundHoverColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const darkTertiaryBackgroundDeHoverColor =
    Color.fromRGBO(34, 34, 34, 1); // grey 800
const lightTertiaryBackgroundSelectedColor =
    Color.fromRGBO(229, 229, 229, 1); // grey 40
const darkTertiaryBackgroundSelectedColor =
    Color.fromRGBO(38, 38, 38, 1); // grey 700
const lightTertiaryBackgroundActiveColor =
    Color.fromRGBO(229, 229, 229, 1); // grey 40
const darkTertiaryBackgroundActiveColor =
    Color.fromRGBO(34, 34, 34, 1); // grey 800
// Text Color,
const lightPrimaryTextColor = Color.fromRGBO(23, 23, 23, 1); // grey 900
const darkPrimaryTextColor = Color.fromRGBO(229, 229, 229, 1); // grey 40
const lightContrastPrimaryTextColor = Color.fromRGBO(13, 13, 13, 1); // grey 950
const darkContrastPrimaryTextColor =
    Color.fromRGBO(236, 241, 255, 1); // blue 10
const lightSecondaryTextColor = Color.fromRGBO(58, 58, 58, 1); // grey 500
const darkSecondaryTextColor = Color.fromRGBO(163, 163, 163, 1); // grey 70
const lightContrastSecondaryTextColor =
    Color.fromRGBO(38, 38, 38, 1); // grey 700
const darkContrastSecondaryTextColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const lightTertiaryTextColor = Color.fromRGBO(82, 82, 82, 1); // grey 300
const darkTertiaryTextColor = Color.fromRGBO(115, 115, 115, 1); // grey 100
const lightContrastTertiaryTextColor =
    Color.fromRGBO(58, 58, 58, 1); // grey 500
const darkContrastTertiaryTextColor =
    Color.fromRGBO(212, 212, 212, 1); // grey 50
const lightPlaceholderTextColor = Color.fromRGBO(163, 163, 163, 1); // grey 70
const darkPlaceholderTextColor = Color.fromRGBO(82, 82, 82, 1); // grey 300
const lightContrastPlaceholderTextColor =
    Color.fromRGBO(115, 115, 115, 1); // grey 100
const darkPContrastlaceholderTextColor =
    Color.fromRGBO(115, 115, 115, 1); // grey 100
const lightTextOnColorColor = Color.fromRGBO(255, 255, 255, 1); // grey 0
const darkTextOnColorColor = Color.fromRGBO(255, 255, 255, 1); // grey 0
const lightContrastTextOnColorColor =
    Color.fromRGBO(255, 255, 255, 1); // grey 0
const darkContrastTextOnColorColor = Color.fromRGBO(255, 255, 255, 1); // grey 0
const lightTextOnColorDisabledColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const darkTextOnColorDisabledColor = Color.fromRGBO(38, 38, 38, 1); // grey 700
const lightContrastTextOnColorDisabledColor =
    Color.fromRGBO(241, 241, 241, 1); // grey 30
const darkContrastTextOnColorDisabledColor =
    Color.fromRGBO(38, 38, 38, 1); // grey 700
// const lightTextHelperColor = Color.fromRGBO(111, 111, 111, 0); // no color on notion
// const darkTextHelperColor = Color.fromRGBO(111, 111, 111, 0); // no color on notion
// const lightContrastTextHelperColor = Color.fromRGBO(111, 111, 111, 0); // no color on notion
// const darkContrastTextHelperColor = Color.fromRGBO(111, 111, 111, 0); // no color on notion
const lightTextHeadingColor = Colors.black;
const darkTextHeadingColor = Colors.white;
const lightTextErrorColor = Color.fromRGBO(239, 68, 68, 1); // error 100
const darkTextErrorColor = Color.fromRGBO(239, 68, 68, 1); // error 100
const lightContrastTextErrorColor = Color.fromRGBO(239, 68, 68, 1); // error 100
const darkContrastTextErrorColor = Color.fromRGBO(239, 68, 68, 1); // error 100
const lightTextWarningColor = Color.fromRGBO(254, 243, 199, 1); // warning 100
const darkTextWarningColor = Color.fromRGBO(254, 243, 199, 1); // warning 100
const lightContrastTextWarningColor =
    Color.fromRGBO(254, 243, 199, 1); // warning 100
const darkContrastTextWarningColor =
    Color.fromRGBO(254, 243, 199, 1); // warning 100
const lightTextSuccessColor = Color.fromRGBO(22, 163, 74, 1); // success 100
const darkTextSuccessColor = Color.fromRGBO(22, 163, 74, 1); // success 100
const lightContrastTextSuccessColor =
    Color.fromRGBO(22, 163, 74, 1); // success 100
const darkContrastTextSuccessColor =
    Color.fromRGBO(22, 163, 74, 1); // success 100
const lightTextDisabledColor = Color.fromRGBO(163, 163, 163, 1); // grey 70
const darkTextDisabledColor = Color.fromRGBO(34, 34, 34, 1); // grey 800
const lightContrastTextDisabledColor =
    Color.fromRGBO(163, 163, 163, 1); // grey 70
const darkContrastTextDisabledColor =
    Color.fromRGBO(34, 34, 34, 1); // grey 800 (edited)
late Color customTextColor;
late Color customBackgroundColor;
late Color customAccentColor;
late Color customNavBarColor;
late Color customNavBarTextColor;

const lightBorderInteractiveColor = Color.fromRGBO(63, 118, 255, 1); // blue 500
const darkBorderInteractiveColor = Color.fromRGBO(63, 118, 255, 1);
const lightContrastBorderInteractiveColor = Color.fromRGBO(63, 118, 255, 1);
const darkContrastBorderInteractiveColor = Color.fromRGBO(63, 118, 255, 1);

const lightBorderSubtle00Color = Color.fromRGBO(245, 245, 245, 1);
const darkBorderSubtle00Color = Color.fromRGBO(34, 34, 34, 1);

const lightBorderSubtle01Color = Color.fromRGBO(229, 229, 229, 1);
const darkBorderSubtle01Color = Color.fromRGBO(38, 38, 38, 1);
const lightBorderSubtleColor = Color.fromRGBO(245, 245, 245, 1);
const darkBorderSubtleColor = Color.fromRGBO(34, 34, 34, 1);
const lightContrastBorderSubtleColor = Color.fromRGBO(245, 245, 245, 1);
const darkContrastBorderSubtleColor = Color.fromRGBO(34, 34, 34, 1);

const lightBorderStrongColor = Color.fromRGBO(212, 212, 212, 1);
const darkBorderStrongColor = Color.fromRGBO(46, 46, 46, 1);
const lightContrastBorderStrongColor = Color.fromRGBO(212, 212, 212, 1);
const darkContrastBorderStrongColor = Color.fromRGBO(46, 46, 46, 1);

const lightBorderStrong01Color = Color.fromRGBO(212, 212, 212, 1);
const darkBorderStrong01Color = Color.fromRGBO(46, 46, 46, 1);

const lightBorderDisabledColor = Color.fromRGBO(241, 241, 241, 1);
const darkBorderDisabledColor = Color.fromRGBO(23, 23, 23, 1);
const lightContrastBorderDisabledColor = Color.fromRGBO(241, 241, 241, 1);
const darkContrastBorderDisabledColor = Color.fromRGBO(23, 23, 23, 1);

const lightPrimaryButtonColor = Color.fromRGBO(63, 118, 255, 1);
const darkPrimaryButtonColor = Color.fromRGBO(63, 118, 255, 1);
const lightPrimaryButtonSelectedColor = Color.fromRGBO(50, 94, 204, 1);
const darkPrimaryButtonSelectedColor = Color.fromRGBO(50, 94, 204, 1);
const lightPrimaryButtonDisabledColor = Color.fromRGBO(140, 173, 255, 1);
const darkPrimaryButtonDisabledColor = Color.fromRGBO(140, 173, 255, 1);

const lightSecondaryButtonColor = Color.fromRGBO(236, 241, 255, 1);
const darkSecondaryButtonColor = Color.fromRGBO(13, 24, 51, 1);
const lightSecondaryButtonSelectedColor = Color.fromRGBO(197, 214, 255, 1);
const darkSecondaryButtonSelectedColor = Color.fromRGBO(19, 35, 76, 1);
const lightSecondaryButtonDisabledColor = Color.fromRGBO(236, 241, 255, 1);
const darkSecondaryButtonDisabledColor = Color.fromRGBO(13, 24, 51, 1);

const lightTertiaryButtonColor = Color.fromRGBO(63, 118, 255, 1);
const darkTertiaryButtonColor = Color.fromRGBO(63, 118, 255, 1);
const lightTertiaryButtonSelectedColor = Color.fromRGBO(50, 94, 204, 1);
const darkTertiaryButtonSelectedColor = Color.fromRGBO(13, 24, 51, 1);
const lightTertiaryButtonDisabledColor = Color.fromRGBO(140, 173, 255, 1);
const darkTertiaryButtonDisabledColor = Color.fromRGBO(25, 47, 102, 1);

const lightPrimaryButtonDangerColor = Color.fromRGBO(239, 68, 68, 1);
const darkPrimaryButtonDangerSelectedColor = Color.fromRGBO(220, 38, 38, 1);

const lightPrimaryLinkColor = Color.fromRGBO(63, 118, 255, 1);
const darkPrimaryLinkColor = Color.fromRGBO(63, 118, 255, 1);
const lightSecondaryLinkColor = Color.fromRGBO(57, 106, 230, 1);
const darkSecondaryLinkColor = Color.fromRGBO(57, 106, 230, 1);

const lightPrimaryIconColor = Color.fromRGBO(38, 38, 38, 1);
const darkPrimaryIconColor = Color.fromRGBO(163, 163, 163, 1);
const lightSecondaryIconColor = Color.fromRGBO(82, 82, 82, 1);
const darkSecondaryIconColor = Color.fromRGBO(82, 82, 82, 1);

const lightToastBackgroundColor = Color.fromRGBO(255, 255, 255, 1);
const darkToastBackgroundColor = Color.fromRGBO(23, 23, 23, 1);

const lightSucessBackground = Color.fromRGBO(240, 253, 244, 1);
const darkSucessBackground = Color.fromRGBO(34, 197, 94, 0.15);

const lightShadowColorXS = Color.fromRGBO(0, 0, 0, 0.16);
const darkShadowColorXS = Color.fromRGBO(0, 0, 0, 0.2);

const Color toastDefaultColorlight = Color.fromRGBO(236, 241, 255, 1);
const Color toastSuccessColorlight = Color.fromRGBO(240, 253, 244, 1);
const Color toastWarningColorlight = Color.fromRGBO(255, 251, 235, 1);
const Color toastErrorCololight = Color.fromRGBO(254, 242, 242, 1);
const Color toastDefaultBorderColor = Color.fromRGBO(63, 118, 255, 1);
const Color toastSuccessBorderColor = Color.fromRGBO(34, 197, 94, 1);
const Color toastWarningBorderColor = Color.fromRGBO(245, 158, 11, 1);
const Color toastErrorBorderColor = Color.fromRGBO(220, 38, 38, 1);

const Color toastDefaultColorDark = Color.fromRGBO(16, 28, 60, 1);
const Color toastSuccessColorDark = Color.fromRGBO(10, 51, 27, 1);
const Color toastkWarningColorDark = Color.fromRGBO(72, 31, 7, 1);
const Color toastErrorColorDark = Color.fromRGBO(95, 21, 21, 1);

InputDecoration kTextFieldDecoration = InputDecoration(
  errorStyle: const TextStyle(
      fontFamily: 'SF Pro Display',
      fontSize: 14,
      color: Colors.red,
      fontWeight: FontWeight.w400),
  //contentPadding: const EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0),
  labelText: '',
  labelStyle: const TextStyle(
    color: Color(0xFFA3A3A3),
  ),
  contentPadding: const EdgeInsets.symmetric(vertical: 15.0, horizontal: 10.0),
  alignLabelWithHint: true,
  errorBorder: const OutlineInputBorder(
    borderSide: BorderSide(color: Color.fromARGB(255, 253, 17, 0)),
    borderRadius: BorderRadius.all(Radius.circular(6.0)),
  ),
  focusedErrorBorder: OutlineInputBorder(
    borderSide: BorderSide(color: Colors.red.shade600, width: 2.0),
    borderRadius: BorderRadius.circular(6
        // topRight: Radius.circular(6),
        // bottomRight: Radius.circular(6),
        ),
  ),
  border: OutlineInputBorder(
    borderSide: BorderSide(
        color: Const.dark ? darkThemeBorder : const Color(0xFFE5E5E5)),
    borderRadius: const BorderRadius.all(
      Radius.circular(10.0),
    ),
  ),
  enabledBorder: OutlineInputBorder(
    borderSide: BorderSide(
        color: Const.dark ? darkThemeBorder : const Color(0xFFE5E5E5),
        width: 1.0),
    borderRadius: const BorderRadius.all(Radius.circular(8)),
  ),
  disabledBorder: OutlineInputBorder(
    borderSide: BorderSide(
        color: Const.dark ? darkThemeBorder : const Color(0xFFE5E5E5),
        width: 1.0),
    borderRadius: const BorderRadius.all(Radius.circular(8)),
  ),
  focusedBorder: const OutlineInputBorder(
    borderSide: BorderSide(color: primaryColor, width: 2.0),
    borderRadius: BorderRadius.all(Radius.circular(8)),
  ),
);
const lightdisabledButtonColor = Color.fromRGBO(229, 229, 229, 1);
const darkdisabledButtonColor = Color.fromRGBO(38, 38, 38, 1);

const LinearGradient gradient = LinearGradient(
  begin: Alignment.topCenter,
  end: Alignment.bottomCenter,
  colors: <Color>[
    Color.fromRGBO(107, 174, 250, 1),
    Color.fromRGBO(244, 247, 251, 1),
    Colors.white
  ],
);
/*
    (20, "Admin"),
    (15, "Member"),
    (10, "Viewer"),
    (5, "Guest"),

*/

List<String> colorsForLabel = [
  '#FF6900',
  '#FCB900',
  '#7BDCB5',
  '#00D084',
  '#8ED1FC',
  '#0693E3',
  '#ABB8C3',
  '#EB144C',
  '#F78DA7',
  '#9900EF',
];

const String accessRestrictedMSG = "You don't have permission to do this";
Role roleParser({required int role}) {
  switch (role) {
    case 20:
      return Role.admin;
    case 15:
      return Role.member;
    case 10:
      return Role.viewer;
    case 5:
      return Role.guest;
    default:
      return Role.none;
  }
}

int priorityParser(String priority) {
  switch (priority) {
    case "urgent":
      return 0;
    case "high":
      return 1;
    case "medium":
      return 2;
    case "low":
      return 3;
    default:
      return 0;
  }
}

int fromRole({required Role role}) {
  switch (role) {
    case Role.admin:
      return 20;
    case Role.member:
      return 15;
    case Role.viewer:
      return 10;
    case Role.guest:
      return 5;
    default:
      return 0;
  }
}

THEME themeParser({required String theme}) {
  switch (theme) {
    case PlaneKeys.LIGHT_THEME:
      return THEME.light;
    case PlaneKeys.DARK_THEME:
      return THEME.dark;
    case PlaneKeys.LIGHT_CONTRAST_THEME:
      return THEME.lightHighContrast;
    case PlaneKeys.DARK_CONTRAST_THEME:
      return THEME.darkHighContrast;
    case PlaneKeys.CUSTOM_THEME:
      return THEME.custom;
    case PlaneKeys.SYSTEM_THEME:
      return SchedulerBinding.instance.platformDispatcher.platformBrightness ==
              Brightness.dark
          ? THEME.dark
          : THEME.light;
    default:
      return THEME.light;
  }
}

String fromTHEME({required THEME theme}) {
  switch (theme) {
    case THEME.light:
      return PlaneKeys.LIGHT_THEME;
    case THEME.dark:
      return PlaneKeys.DARK_THEME;
    case THEME.lightHighContrast:
      return PlaneKeys.LIGHT_CONTRAST_THEME;
    case THEME.darkHighContrast:
      return PlaneKeys.DARK_CONTRAST_THEME;
    case THEME.custom:
      return PlaneKeys.CUSTOM_THEME;
    case THEME.systemPreferences:
      return PlaneKeys.SYSTEM_THEME;
    default:
      return PlaneKeys.LIGHT_THEME;
  }
}

double height = MediaQuery.of(Const.globalKey.currentContext!).size.height;
double width = MediaQuery.of(Const.globalKey.currentContext!).size.width;

EdgeInsets bottomSheetConstPadding =
    const EdgeInsets.only(left: 16, right: 16, top: 16, bottom: 30);

double bottomSheetConstBottomPadding = 30;

const double buttonBorderRadiusLarge = 6;
const double buttonBorderRadiusMedium = 5;
const double buttonBorderRadiusSmall = 4;

const List<String> emojis = [
  "8986",
  "8987",
  "9193",
  "9194",
  "9195",
  "9196",
  "9197",
  "9198",
  "9199",
  "9200",
  "9201",
  "9202",
  "9203",
  "9208",
  "9209",
  "9210",
  "9410",
  "9748",
  "9749",
  "9757",
  "9800",
  "9801",
  "9802",
  "9803",
  "9804",
  "9805",
  "9806",
  "9807",
  "9808",
  "9809",
  "9810",
  "9811",
  "9823",
  "9855",
  "9875",
  "9889",
  "9898",
  "9899",
  "9917",
  "9918",
  "9924",
  "9925",
  "9934",
  "9935",
  "9937",
  "9939",
  "9940",
  "9961",
  "9962",
  "9968",
  "9969",
  "9970",
  "9971",
  "9972",
  "9973",
  "9975",
  "9976",
  "9977",
  "9978",
  "9981",
  "9986",
  "9989",
  "9992",
  "9993",
  "9994",
  "9995",
  "9996",
  "9997",
  "9999",
  "10002",
  "10004",
  "10006",
  "10013",
  "10017",
  "10024",
  "10035",
  "10036",
  "10052",
  "10055",
  "10060",
  "10062",
  "10067",
  "10068",
  "10069",
  "10071",
  "10083",
  "10084",
  "10133",
  "10134",
  "10135",
  "10145",
  "10160",
  "10175",
  "10548",
  "10549",
  "11013",
  "11014",
  "11015",
  "11035",
  "11036",
  "11088",
  "11093",
  "12336",
  "12349",
  "12951",
  "12953",
  "126980",
  "127183",
  "127344",
  "127345",
  "127358",
  "127359",
  "127374",
  "127377",
  "127378",
  "127379",
  "127380",
  "127381",
  "127382",
  "127383",
  "127384",
  "127385",
  "127386",
  "127489",
  "127490",
  "127514",
  "127535",
  "127538",
  "127539",
  "127540",
  "127541",
  "127542",
  "127543",
  "127544",
  "127545",
  "127546",
  "127568",
  "127569",
  "127744",
  "127745",
  "127746",
  "127747",
  "127748",
  "127749",
  "127750",
  "127751",
  "127752",
  "127753",
  "127754",
  "127755",
  "127756",
  "127757",
  "127758",
  "127759",
  "127760",
  "127761",
  "127762",
  "127763",
  "127764",
  "127765",
  "127766",
  "127767",
  "127768",
  "127769",
  "127770",
  "127771",
  "127772",
  "127773",
  "127774",
  "127775",
  "127776",
  "127777",
  "127780",
  "127781",
  "127782",
  "127783",
  "127784",
  "127785",
  "127786",
  "127787",
  "127788",
  "127789",
  "127790",
  "127791",
  "127792",
  "127793",
  "127794",
  "127795",
  "127796",
  "127797",
  "127798",
  "127799",
  "127800",
  "127801",
  "127802",
  "127803",
  "127804",
  "127805",
  "127806",
  "127807",
  "127808",
  "127809",
  "127810",
  "127811",
  "127812",
  "127813",
  "127814",
  "127815",
  "127816",
  "127817",
  "127818",
  "127819",
  "127820",
  "127821",
  "127822",
  "127823",
  "127824",
  "127825",
  "127826",
  "127827",
  "127828",
  "127829",
  "127830",
  "127831",
  "127832",
  "127833",
  "127834",
  "127835",
  "127836",
  "127837",
  "127838",
  "127839",
  "127840",
  "127841",
  "127842",
  "127843",
  "127844",
  "127845",
  "127846",
  "127847",
  "127848",
  "127849",
  "127850",
  "127851",
  "127852",
  "127853",
  "127854",
  "127855",
  "127856",
  "127857",
  "127858",
  "127859",
  "127860",
  "127861",
  "127862",
  "127863",
  "127864",
  "127865",
  "127866",
  "127867",
  "127868",
  "127869",
  "127870",
  "127871",
  "127872",
  "127873",
  "127874",
  "127875",
  "127876",
  "127877",
  "127878",
  "127879",
  "127880",
  "127881",
  "127882",
  "127883",
  "127884",
  "127885",
  "127886",
  "127887",
  "127888",
  "127889",
  "127890",
  "127891",
  "127894",
  "127895",
  "127897",
  "127898",
  "127899",
  "127902",
  "127903",
  "127904",
  "127905",
  "127906",
  "127907",
  "127908",
  "127909",
  "127910",
  "127911",
  "127912",
  "127913",
  "127914",
  "127915",
  "127916",
  "127917",
  "127918",
  "127919",
  "127920",
  "127921",
  "127922",
  "127923",
  "127924",
  "127925",
  "127926",
  "127927",
  "127928",
  "127929",
  "127930",
  "127931",
  "127932",
  "127933",
  "127934",
  "127935",
  "127936",
  "127937",
  "127938",
  "127939",
  "127940",
  "127941",
  "127942",
  "127943",
  "127944",
  "127945",
  "127946",
  "127947",
  "127948",
  "127949",
  "127950",
  "127951",
  "127952",
  "127953",
  "127954",
  "127955",
  "127956",
  "127957",
  "127958",
  "127959",
  "127960",
  "127961",
  "127962",
  "127963",
  "127964",
  "127965",
  "127966",
  "127967",
  "127968",
  "127969",
  "127970",
  "127971",
  "127972",
  "127973",
  "127974",
  "127975",
  "127976",
  "127977",
  "127978",
  "127979",
  "127980",
  "127981",
  "127982",
  "127983",
  "127984",
  "127987",
  "127988",
  "127989",
  "127991",
  "127992",
  "127993",
  "127994",
  "127995",
  "127996",
  "127997",
  "127998",
  "127999",
  "128000",
  "128001",
  "128002",
  "128003",
  "128004",
  "128005",
  "128006",
  "128007",
  "128008",
  "128009",
  "128010",
  "128011",
  "128012",
  "128013",
  "128014",
  "128015",
  "128016",
  "128017",
  "128018",
  "128019",
  "128020",
  "128021",
  "128022",
  "128023",
  "128024",
  "128025",
  "128026",
  "128027",
  "128028",
  "128029",
  "128030",
  "128031",
  "128032",
  "128033",
  "128034",
  "128035",
  "128036",
  "128037",
  "128038",
  "128039",
  "128040",
  "128041",
  "128042",
  "128043",
  "128044",
  "128045",
  "128046",
  "128047",
  "128048",
  "128049",
  "128050",
  "128051",
  "128052",
  "128053",
  "128054",
  "128055",
  "128056",
  "128057",
  "128058",
  "128059",
  "128060",
  "128061",
  "128062",
  "128063",
  "128064",
  "128065",
  "128066",
  "128067",
  "128068",
  "128069",
  "128070",
  "128071",
  "128072",
  "128073",
  "128074",
  "128075",
  "128076",
  "128077",
  "128078",
  "128079",
  "128080",
  "128081",
  "128082",
  "128083",
  "128084",
  "128085",
  "128086",
  "128087",
  "128088",
  "128089",
  "128090",
  "128091",
  "128092",
  "128093",
  "128094",
  "128095",
  "128096",
  "128097",
  "128098",
  "128099",
  "128100",
  "128101",
  "128102",
  "128103",
  "128104",
  "128105",
  "128106",
  "128107",
  "128108",
  "128109",
  "128110",
  "128111",
  "128112",
  "128113",
  "128114",
  "128115",
  "128116",
  "128117",
  "128118",
  "128119",
  "128120",
  "128121",
  "128122",
  "128123",
  "128124",
  "128125",
  "128126",
  "128127",
  "128128",
  "128129",
  "128130",
  "128131",
  "128132",
  "128133",
  "128134",
  "128135",
  "128136",
  "128137",
  "128138",
  "128139",
  "128140",
  "128141",
  "128142",
  "128143",
  "128144",
  "128145",
  "128146",
  "128147",
  "128148",
  "128149",
  "128150",
  "128151",
  "128152",
  "128153",
  "128154",
  "128155",
  "128156",
  "128157",
  "128158",
  "128159",
  "128160",
  "128161",
  "128162",
  "128163",
  "128164",
  "128165",
  "128166",
  "128167",
  "128168",
  "128169",
  "128170",
  "128171",
  "128172",
  "128173",
  "128174",
  "128175",
  "128176",
  "128177",
  "128178",
  "128179",
  "128180",
  "128181",
  "128182",
  "128183",
  "128184",
  "128185",
  "128186",
  "128187",
  "128188",
  "128189",
  "128190",
  "128191",
  "128192",
  "128193",
  "128194",
  "128195",
  "128196",
  "128197",
  "128198",
  "128199",
  "128200",
  "128201",
  "128202",
  "128203",
  "128204",
  "128205",
  "128206",
  "128207",
  "128208",
  "128209",
  "128210",
  "128211",
  "128212",
  "128213",
  "128214",
  "128215",
  "128216",
  "128217",
  "128218",
  "128219",
  "128220",
  "128221",
  "128222",
  "128223",
  "128224",
  "128225",
  "128226",
  "128227",
  "128228",
  "128229",
  "128230",
  "128231",
  "128232",
  "128233",
  "128234",
  "128235",
  "128236",
  "128237",
  "128238",
  "128239",
  "128240",
  "128241",
  "128242",
  "128243",
  "128244",
  "128245",
  "128246",
  "128247",
  "128248",
  "128249",
  "128250",
  "128251",
  "128252",
  "128253",
  "128255",
  "128256",
  "128257",
  "128258",
  "128259",
  "128260",
  "128261",
  "128262",
  "128263",
  "128264",
  "128265",
  "128266",
  "128267",
  "128268",
  "128269",
  "128270",
  "128271",
  "128272",
  "128273",
  "128274",
  "128275",
  "128276",
  "128277",
  "128278",
  "128279",
  "128280",
  "128281",
  "128282",
  "128283",
  "128284",
  "128285",
  "128286",
  "128287",
  "128288",
  "128289",
  "128290",
  "128291",
  "128292",
  "128293",
  "128294",
  "128295",
  "128296",
  "128297",
  "128298",
  "128299",
  "128300",
  "128301",
  "128302",
  "128303",
  "128304",
  "128305",
  "128306",
  "128307",
  "128308",
  "128309",
  "128310",
  "128311",
  "128312",
  "128313",
  "128314",
  "128315",
  "128316",
  "128317",
  "128329",
  "128330",
  "128331",
  "128332",
  "128333",
  "128334",
  "128336",
  "128337",
  "128338",
  "128339",
  "128340",
  "128341",
  "128342",
  "128343",
  "128344",
  "128345",
  "128346",
  "128347",
  "128348",
  "128349",
  "128350",
  "128351",
  "128352",
  "128353",
  "128354",
  "128355",
  "128356",
  "128357",
  "128358",
  "128359",
  "128367",
  "128368",
  "128371",
  "128372",
  "128373",
  "128374",
  "128375",
  "128376",
  "128377",
  "128378",
  "128391",
  "128394",
  "128395",
  "128396",
  "128397",
  "128400",
  "128405",
  "128406",
  "128420",
  "128421",
  "128424",
  "128433",
  "128434",
  "128444",
  "128450",
  "128451",
  "128452",
  "128465",
  "128466",
  "128467",
  "128476",
  "128477",
  "128478",
  "128481",
  "128483",
  "128488",
  "128495",
  "128499",
  "128506",
  "128507",
  "128508",
  "128509",
  "128510",
  "128511",
  "128512",
  "128513",
  "128514",
  "128515",
  "128516",
  "128517",
  "128518",
  "128519",
  "128520",
  "128521",
  "128522",
  "128523",
  "128524",
  "128525",
  "128526",
  "128527",
  "128528",
  "128529",
  "128530",
  "128531",
  "128532",
  "128533",
  "128534",
  "128535",
  "128536",
  "128537",
  "128538",
  "128539",
  "128540",
  "128541",
  "128542",
  "128543",
  "128544",
  "128545",
  "128546",
  "128547",
  "128548",
  "128549",
  "128550",
  "128551",
  "128552",
  "128553",
  "128554",
  "128555",
  "128556",
  "128557",
  "128558",
  "128559",
  "128560",
  "128561",
  "128562",
  "128563",
  "128564",
  "128565",
  "128566",
  "128567",
  "128568",
  "128569",
  "128570",
  "128571",
  "128572",
  "128573",
  "128574",
  "128575",
  "128576",
  "128577",
  "128578",
  "128579",
  "128580",
  "128581",
  "128582",
  "128583",
  "128584",
  "128585",
  "128586",
  "128587",
  "128588",
  "128589",
  "128590",
  "128591",
  "128640",
  "128641",
  "128642",
  "128643",
  "128644",
  "128645",
  "128646",
  "128647",
  "128648",
  "128649",
  "128650",
  "128651",
  "128652",
  "128653",
  "128654",
  "128655",
  "128656",
  "128657",
  "128658",
  "128659",
  "128660",
  "128661",
  "128662",
  "128663",
  "128664",
  "128665",
  "128666",
  "128667",
  "128668",
  "128669",
  "128670",
  "128671",
  "128672",
  "128673",
  "128674",
  "128675",
  "128676",
  "128677",
  "128678",
  "128679",
  "128680",
  "128681",
  "128682",
  "128683",
  "128684",
  "128685",
  "128686",
  "128687",
  "128688",
  "128689",
  "128690",
  "128691",
  "128692",
  "128693",
  "128694",
  "128695",
  "128696",
  "128697",
  "128698",
  "128699",
  "128700",
  "128701",
  "128702",
  "128703",
  "128704",
  "128705",
  "128706",
  "128707",
  "128708",
  "128709",
  "128715",
  "128716",
  "128717",
  "128718",
  "128719",
  "128720",
  "128721",
  "128722",
  "128736",
  "128737",
  "128738",
  "128739",
  "128740",
  "128741",
  "128745",
  "128747",
  "128748",
  "128752",
  "128755",
  "128756",
  "128757",
  "128758",
  "128759",
  "128760",
  "128761",
  "128762",
  "129296",
  "129297",
  "129298",
  "129299",
  "129300",
  "129301",
  "129302",
  "129303",
  "129304",
  "129305",
  "129306",
  "129307",
  "129308",
  "129309",
  "129310",
  "129311",
  "129312",
  "129313",
  "129314",
  "129315",
  "129316",
  "129317",
  "129318",
  "129319",
  "129320",
  "129321",
  "129322",
  "129323",
  "129324",
  "129325",
  "129326",
  "129327",
  "129328",
  "129329",
  "129330",
  "129331",
  "129332",
  "129333",
  "129334",
  "129335",
  "129336",
  "129337",
  "129338",
  "129340",
  "129341",
  "129342",
  "129344",
  "129345",
  "129346",
  "129347",
  "129348",
  "129349",
  "129351",
  "129352",
  "129353",
  "129354",
  "129355",
  "129356",
  "129357",
  "129358",
  "129359",
  "129360",
  "129361",
  "129362",
  "129363",
  "129364",
  "129365",
  "129366",
  "129367",
  "129368",
  "129369",
  "129370",
  "129371",
  "129372",
  "129373",
  "129374",
  "129375",
  "129376",
  "129377",
  "129378",
  "129379",
  "129380",
  "129381",
  "129382",
  "129383",
  "129384",
  "129385",
  "129386",
  "129387",
  "129408",
  "129409",
  "129410",
  "129411",
  "129412",
  "129413",
  "129414",
  "129415",
  "129416",
  "129417",
  "129418",
  "129419",
  "129420",
  "129421",
  "129422",
  "129423",
  "129424",
  "129425",
  "129426",
  "129427",
  "129428",
  "129429",
  "129430",
  "129431",
  "129472",
  "129488",
  "129489",
  "129490",
  "129491",
  "129492",
  "129493",
  "129494",
  "129495",
  "129496",
  "129497",
  "129498",
  "129499",
  "129500",
  "129501",
  "129502",
  "129503",
  "129504",
  "129505",
  "129506",
  "129507",
  "129508",
  "129509",
  "129510"
];

const List icons = [
  {"name": "search"},
  {"name": "home"},
  {"name": "menu"},
  {"name": "close"},
  {"name": "settings"},
  {"name": "done"},
  {"name": "check_circle"},
  {"name": "favorite"},
  {"name": "add"},
  {"name": "delete"},
  {"name": "arrow_back"},
  {"name": "star"},
  {"name": "logout"},
  {"name": "add_circle"},
  {"name": "cancel"},
  {"name": "arrow_drop_down"},
  {"name": "more_vert"},
  {"name": "check"},
  {"name": "check_box"},
  {"name": "toggle_on"},
  {"name": "open_in_new"},
  {"name": "refresh"},
  {"name": "login"},
  {"name": "radio_button_unchecked"},
  {"name": "more_horiz"},
  {"name": "apps"},
  {"name": "radio_button_checked"},
  {"name": "download"},
  {"name": "remove"},
  {"name": "toggle_off"},
  {"name": "bolt"},
  {"name": "arrow_upward"},
  {"name": "filter_list"},
  {"name": "delete_forever"},
  {"name": "autorenew"},
  {"name": "key"},
  {"name": "sort"},
  {"name": "sync"},
  {"name": "add_box"},
  {"name": "block"},
  {"name": "restart_alt"},
  {"name": "menu_open"},
  {"name": "shopping_cart_checkout"},
  {"name": "expand_circle_down"},
  {"name": "backspace"},
  {"name": "undo"},
  {"name": "done_all"},
  {"name": "do_not_disturb_on"},
  {"name": "open_in_full"},
  {"name": "double_arrow"},
  {"name": "sync_alt"},
  {"name": "zoom_in"},
  {"name": "done_outline"},
  {"name": "drag_indicator"},
  {"name": "fullscreen"},
  {"name": "star_half"},
  {"name": "settings_accessibility"},
  {"name": "reply"},
  {"name": "exit_to_app"},
  {"name": "unfold_more"},
  {"name": "library_add"},
  {"name": "cached"},
  {"name": "select_check_box"},
  {"name": "terminal"},
  {"name": "change_circle"},
  {"name": "disabled_by_default"},
  {"name": "swap_horiz"},
  {"name": "swap_vert"},
  {"name": "app_registration"},
  {"name": "download_for_offline"},
  {"name": "close_fullscreen"},
  {"name": "file_open"},
  {"name": "minimize"},
  {"name": "open_with"},
  {"name": "dataset"},
  {"name": "add_task"},
  {"name": "start"},
  {"name": "keyboard_voice"},
  {"name": "create_new_folder"},
  {"name": "forward"},
  {"name": "settings_applications"},
  {"name": "compare_arrows"},
  {"name": "redo"},
  {"name": "zoom_out"},
  {"name": "publish"},
  {"name": "html"},
  {"name": "token"},
  {"name": "switch_access_shortcut"},
  {"name": "fullscreen_exit"},
  {"name": "sort_by_alpha"},
  {"name": "delete_sweep"},
  {"name": "indeterminate_check_box"},
  {"name": "view_timeline"},
  {"name": "settings_backup_restore"},
  {"name": "arrow_drop_down_circle"},
  {"name": "assistant_navigation"},
  {"name": "sync_problem"},
  {"name": "clear_all"},
  {"name": "density_medium"},
  {"name": "heart_plus"},
  {"name": "filter_alt_off"},
  {"name": "expand"},
  {"name": "subdirectory_arrow_right"},
  {"name": "download_done"},
  {"name": "arrow_outward"},
  {"name": "123"},
  {"name": "swipe_left"},
  {"name": "auto_mode"},
  {"name": "saved_search"},
  {"name": "place_item"},
  {"name": "system_update_alt"},
  {"name": "javascript"},
  {"name": "search_off"},
  {"name": "output"},
  {"name": "select_all"},
  {"name": "fit_screen"},
  {"name": "swipe_up"},
  {"name": "dynamic_form"},
  {"name": "hide_source"},
  {"name": "swipe_right"},
  {"name": "switch_access_shortcut_add"},
  {"name": "browse_gallery"},
  {"name": "css"},
  {"name": "density_small"},
  {"name": "assistant_direction"},
  {"name": "check_small"},
  {"name": "youtube_searched_for"},
  {"name": "move_up"},
  {"name": "swap_horizontal_circle"},
  {"name": "data_thresholding"},
  {"name": "install_mobile"},
  {"name": "move_down"},
  {"name": "dataset_linked"},
  {"name": "keyboard_command_key"},
  {"name": "view_kanban"},
  {"name": "swipe_down"},
  {"name": "key_off"},
  {"name": "transcribe"},
  {"name": "send_time_extension"},
  {"name": "swipe_down_alt"},
  {"name": "swipe_left_alt"},
  {"name": "swipe_right_alt"},
  {"name": "swipe_up_alt"},
  {"name": "keyboard_option_key"},
  {"name": "cycle"},
  {"name": "rebase"},
  {"name": "rebase_edit"},
  {"name": "empty_dashboard"},
  {"name": "magic_exchange"},
  {"name": "acute"},
  {"name": "point_scan"},
  {"name": "step_into"},
  {"name": "cheer"},
  {"name": "emoticon"},
  {"name": "explosion"},
  {"name": "water_bottle"},
  {"name": "weather_hail"},
  {"name": "syringe"},
  {"name": "pill"},
  {"name": "genetics"},
  {"name": "allergy"},
  {"name": "medical_mask"},
  {"name": "body_fat"},
  {"name": "barefoot"},
  {"name": "infrared"},
  {"name": "wrist"},
  {"name": "metabolism"},
  {"name": "conditions"},
  {"name": "taunt"},
  {"name": "altitude"},
  {"name": "tibia"},
  {"name": "footprint"},
  {"name": "eyeglasses"},
  {"name": "man_3"},
  {"name": "woman_2"},
  {"name": "rheumatology"},
  {"name": "tornado"},
  {"name": "landslide"},
  {"name": "foggy"},
  {"name": "severe_cold"},
  {"name": "tsunami"},
  {"name": "vape_free"},
  {"name": "sign_language"},
  {"name": "emoji_symbols"},
  {"name": "clear_night"},
  {"name": "emoji_food_beverage"},
  {"name": "hive"},
  {"name": "thunderstorm"},
  {"name": "communication"},
  {"name": "rocket"},
  {"name": "pets"},
  {"name": "public"},
  {"name": "quiz"},
  {"name": "mood"},
  {"name": "gavel"},
  {"name": "eco"},
  {"name": "diamond"},
  {"name": "forest"},
  {"name": "rainy"},
  {"name": "skull"}
];

Map<String, IconData> iconList = {
  'search': Symbols.search,
  'home': Symbols.home,
  'menu': Symbols.menu,
  'close': Symbols.close,
  'settings': Symbols.settings,
  'done': Symbols.done,
  'check_circle': Symbols.check_circle,
  'favorite': Symbols.favorite,
  'add': Symbols.add,
  'delete': Symbols.delete,
  'arrow_back': Symbols.arrow_back,
  'star': Symbols.star,
  'logout': Symbols.logout,
  'add_circle': Symbols.add_circle,
  'cancel': Symbols.cancel,
  'arrow_drop_down': Symbols.arrow_drop_down,
  'more_vert': Symbols.more_vert,
  'check': Symbols.check,
  'check_box': Symbols.check_box,
  'toggle_on': Symbols.toggle_on,
  'open_in_new': Symbols.open_in_new,
  'refresh': Symbols.refresh,
  'login': Symbols.login,
  'radio_button_unchecked': Symbols.radio_button_unchecked,
  'more_horiz': Symbols.more_horiz,
  'apps': Symbols.apps,
  'radio_button_checked': Symbols.radio_button_checked,
  'download': Symbols.download,
  'remove': Symbols.remove,
  'toggle_off': Symbols.toggle_off,
  'bolt': Symbols.bolt,
  'arrow_upward': Symbols.arrow_upward,
  'filter_list': Symbols.filter_list,
  'delete_forever': Symbols.delete_forever,
  'autorenew': Symbols.autorenew,
  'key': Symbols.key,
  'sort': Symbols.sort,
  'sync': Symbols.sync,
  'add_box': Symbols.add_box,
  'block': Symbols.block,
  'restart_alt': Symbols.restart_alt,
  'menu_open': Symbols.menu_open,
  'shopping_cart_checkout': Symbols.shopping_cart_checkout,
  'expand_circle_down': Symbols.expand_circle_down,
  'backspace': Symbols.backspace,
  'undo': Symbols.undo,
  'done_all': Symbols.done_all,
  'do_not_disturb_on': Symbols.do_not_disturb_on,
  'open_in_full': Symbols.open_in_full,
  'double_arrow': Symbols.double_arrow,
  'sync_alt': Symbols.sync_alt,
  'zoom_in': Symbols.zoom_in,
  'done_outline': Symbols.done_outline,
  'drag_indicator': Symbols.drag_indicator,
  'fullscreen': Symbols.fullscreen,
  'star_half': Symbols.star_half,
  'settings_accessibility': Symbols.settings_accessibility,
  'reply': Symbols.reply,
  'exit_to_app': Symbols.exit_to_app,
  'unfold_more': Symbols.unfold_more,
  'library_add': Symbols.library_add,
  'cached': Symbols.cached,
  'select_check_box': Symbols.select_check_box,
  'terminal': Symbols.terminal,
  'change_circle': Symbols.change_circle,
  'disabled_by_default': Symbols.disabled_by_default,
  'swap_horiz': Symbols.swap_horiz,
  'swap_vert': Symbols.swap_vert,
  'app_registration': Symbols.app_registration,
  'download_for_offline': Symbols.download_for_offline,
  'close_fullscreen': Symbols.close_fullscreen,
  'file_open': Symbols.file_open,
  'minimize': Symbols.minimize,
  'open_with': Symbols.open_with,
  'dataset': Symbols.dataset,
  'add_task': Symbols.add_task,
  'start': Symbols.start,
  'keyboard_voice': Symbols.keyboard_voice,
  'create_new_folder': Symbols.create_new_folder,
  'forward': Symbols.forward,
  'settings_applications': Symbols.settings_applications,
  'compare_arrows': Symbols.compare_arrows,
  'redo': Symbols.redo,
  'zoom_out': Symbols.zoom_out,
  'publish': Symbols.publish,
  'html': Symbols.html,
  'token': Symbols.token,
  'switch_access_shortcut': Symbols.switch_access_shortcut,
  'fullscreen_exit': Symbols.fullscreen_exit,
  'sort_by_alpha': Symbols.sort_by_alpha,
  'delete_sweep': Symbols.delete_sweep,
  'indeterminate_check_box': Symbols.indeterminate_check_box,
  'view_timeline': Symbols.view_timeline,
  'settings_backup_restore': Symbols.settings_backup_restore,
  'arrow_drop_down_circle': Symbols.arrow_drop_down_circle,
  'assistant_navigation': Symbols.assistant_navigation,
  'sync_problem': Symbols.sync_problem,
  'clear_all': Symbols.clear_all,
  'density_medium': Symbols.density_medium,
  'heart_plus': Symbols.heart_plus,
  'filter_alt_off': Symbols.filter_alt_off,
  'expand': Symbols.expand,
  'subdirectory_arrow_right': Symbols.subdirectory_arrow_right,
  'download_done': Symbols.download_done,
  'arrow_outward': Symbols.arrow_outward,
  '123': Symbols.numbers,
  'swipe_left': Symbols.swipe_left,
  'auto_mode': Symbols.auto_mode,
  'saved_search': Symbols.saved_search,
  'place_item': Symbols.place_item,
  'system_update_alt': Symbols.system_update_alt,
  'javascript': Symbols.javascript,
  'search_off': Symbols.search_off,
  'output': Symbols.output,
  'select_all': Symbols.select_all,
  'fit_screen': Symbols.fit_screen,
  'swipe_up': Symbols.swipe_up,
  'dynamic_form': Symbols.dynamic_form,
  'hide_source': Symbols.hide_source,
  'swipe_right': Symbols.swipe_right,
  'switch_access_shortcut_add': Symbols.switch_access_shortcut_add,
  'browse_gallery': Symbols.browse_gallery,
  'css': Symbols.css,
  'density_small': Symbols.density_small,
  'assistant_direction': Symbols.assistant_direction,
  'check_small': Symbols.check_small,
  'youtube_searched_for': Symbols.youtube_searched_for,
  'move_up': Symbols.move_up,
  'swap_horizontal_circle': Symbols.swap_horizontal_circle,
  'data_thresholding': Symbols.data_thresholding,
  'install_mobile': Symbols.install_mobile,
  'move_down': Symbols.move_down,
  'dataset_linked': Symbols.dataset_linked,
  'keyboard_command_key': Symbols.keyboard_command_key,
  'view_kanban': Symbols.view_kanban,
  'swipe_down': Symbols.swipe_down,
  'key_off': Symbols.key_off,
  'transcribe': Symbols.transcribe,
  'send_time_extension': Symbols.send_time_extension,
  'swipe_down_alt': Symbols.swipe_down_alt,
  'swipe_left_alt': Symbols.swipe_left_alt,
  'swipe_right_alt': Symbols.swipe_right_alt,
  'swipe_up_alt': Symbols.swipe_up_alt,
  'keyboard_option_key': Symbols.keyboard_option_key,
  'cycle': Symbols.cycle,
  'rebase': Symbols.rebase,
  'rebase_edit': Symbols.rebase_edit,
  'empty_dashboard': Symbols.empty_dashboard,
  'magic_exchange': Symbols.magic_exchange,
  'acute': Symbols.acute,
  'point_scan': Symbols.point_scan,
  'step_into': Symbols.step_into,
  'cheer': Symbols.cheer,
  'emoticon': Symbols.emoticon,
  'explosion': Symbols.explosion,
  'water_bottle': Symbols.water_bottle,
  'weather_hail': Symbols.weather_hail,
  'syringe': Symbols.syringe,
  'pill': Symbols.pill,
  'genetics': Symbols.genetics,
  'allergy': Symbols.allergy,
  'medical_mask': Symbols.medical_mask,
  'body_fat': Symbols.body_fat,
  'barefoot': Symbols.barefoot,
  'infrared': Symbols.infrared,
  'wrist': Symbols.wrist,
  'metabolism': Symbols.metabolism,
  'conditions': Symbols.conditions,
  'taunt': Symbols.taunt,
  'altitude': Symbols.altitude,
  'tibia': Symbols.tibia,
  'footprint': Symbols.footprint,
  'eyeglasses': Symbols.eyeglasses,
  'man_3': Symbols.man_3,
  'woman_2': Symbols.woman_2,
  'rheumatology': Symbols.rheumatology,
  'tornado': Symbols.tornado,
  'landslide': Symbols.landslide,
  'foggy': Symbols.foggy,
  'severe_cold': Symbols.severe_cold,
  'tsunami': Symbols.tsunami,
  'vape_free': Symbols.vape_free,
  'sign_language': Symbols.sign_language,
  'emoji_symbols': Symbols.emoji_symbols,
  'clear_night': Symbols.clear_night,
  'emoji_food_beverage': Symbols.emoji_food_beverage,
  'hive': Symbols.hive,
  'thunderstorm': Symbols.thunderstorm,
  'communication': Symbols.communication,
  'rocket': Symbols.rocket,
  'pets': Symbols.pets,
  'public': Symbols.public,
  'quiz': Symbols.quiz,
  'mood': Symbols.mood,
  'gavel': Symbols.gavel,
  'eco': Symbols.eco,
  'diamond': Symbols.diamond,
  'forest': Symbols.forest,
  'rainy': Symbols.rainy,
  'skull': Symbols.skull,
};
